
Texture2D shaderTexture : register(t0);
Texture2D normalTexture : register(t1);
SamplerState SampleTypeWrap : register(s0);

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
    float3 normal : NORMAL;
	//float3 tangent : TANGENT;
	//float3 binormal : BINORMAL;
    //float4 color : COLOR;
};

struct PixelOutputType
{
	float4 color : SV_Target0;
	float4 normal : SV_Target1;
};
////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
PixelOutputType TerrainPixelShader(PixelInputType input) : SV_TARGET
{
	PixelOutputType output;
	output.color = shaderTexture.Sample(SampleTypeWrap, input.tex);
	output.normal = float4(input.normal,1.0f);
	return output;

}